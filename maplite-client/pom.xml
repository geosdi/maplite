<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.geosdi</groupId>
        <artifactId>maplite</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>org.geosdi</groupId>
    <artifactId>maplite-client</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>
    
    <name>GEOSDI :: == MapLite Web Client Application</name>
    
    
    <dependencies>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwtVersion}</version>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwtVersion}</version>
            <!--<scope>provided</scope>-->
        </dependency>
        
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api-version}</version>
            <!--<scope>test</scope>-->
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api-version}</version>
            <classifier>sources</classifier>
            <!--<scope>test</scope>-->
        </dependency>
        
        <!--        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-codeserver</artifactId>
            <version>${gwtVersion}</version>
            <scope>runtime</scope>
        </dependency>-->
        
        <!--        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwtVersion}</version>
            <scope>provided</scope>
        </dependency>-->
        
        <!--        <dependency>
            <groupId>com.github.gwtbootstrap</groupId>
            <artifactId>gwt-bootstrap</artifactId>
            <version>${gwt-bootstrap-version}</version>
        </dependency>-->
        
        <dependency>
            <groupId>org.gwtopenmaps.openlayers</groupId>
            <artifactId>gwt-openlayers-client</artifactId>
            <version>${gwt-ol-version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.gwtopenmaps.openlayers</groupId>
            <artifactId>gwt-openlayers-server</artifactId>
            <version>${gwt-ol-version}</version>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>maplite-model</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>maplite-model</artifactId>
            <version>${project.version}</version>
            <classifier>sources</classifier>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring-version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>gp-shared-beans</artifactId>
            <version>${geoplatform-version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-ws-basic-connector</artifactId>
            <version>${geoplatform-version}</version>
        </dependency>
        
        <dependency>
            <groupId>it.geosolutions</groupId>
            <artifactId>geoserver-manager</artifactId>
            <version>${geoserver-manager-version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava-version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava-gwt</artifactId>
            <version>${guava-version}</version>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit-version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>



    <build>
        <!-- Generate compiled stuff in the folder used for developing mode -->
        <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
        
        <plugins>
            
            <!-- GWT Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                            <!--<goal>i18n</goal>-->
                            <goal>generateAsync</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- Plugin configuration. There are many available options, see
                gwt-maven-plugin documentation at codehaus.org -->
                <configuration>
                    <compileSourcesArtifacts>
                        <compileSourcesArtifact>org.geosdi:maplite-model</compileSourcesArtifact>
                        <compileSourcesArtifact>org.geosdi:maplite-client</compileSourcesArtifact>
                    </compileSourcesArtifacts>
                    <runTarget>geoSDIMapLite.html</runTarget>
                    <hostedWebapp>${webappDirectory}</hostedWebapp>
                    <!--<additionalSources>${webappDirectory}</additionalSources>-->
                    <!--<additionalSources>src/main/java,target/generated-sources</additionalSources>-->
                </configuration>
            </plugin>
            
            <!-- Copy static web files before executing gwt:run -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <webappDirectory>${webappDirectory}</webappDirectory>
                </configuration>
            </plugin>
            
            <!-- Run the application using "mvn jetty:run" -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>8.1.15.v20140411</version>
                <configuration>
                    <contextXml>${basedir}/src/main/webapp/WEB-INF/jetty-context.xml</contextXml>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <stopPort>9966</stopPort>
                    <stopKey>stop-jetty</stopKey>
                    <webAppSourceDirectory>${webappDirectory}</webAppSourceDirectory>
                    <!--<systemProperties> -->

                    <!--<systemProperty> -->

                    <!--<name>jetty.port</name> -->

                    <!--<value>8888</value> -->

                    <!--</systemProperty> -->

                    <!--</systemProperties> -->
                    <executions>
                        <execution>
                            <id>start-jetty</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <daemon>true</daemon>
                                <scanIntervalSeconds>0</scanIntervalSeconds>
                            </configuration>
                        </execution>
                        <execution>
                            <id>stop-jetty</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>9393</port>
                            <maxIdleTime>60000</maxIdleTime>
                            <!-- <host>192.168.10.6</host> -->
                            <host>localhost</host>
                        </connector>
                    </connectors>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>remove-build-files</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <delete dir="war/WEB-INF/lib" />
                                <delete dir="war/WEB-INF/deploy" />
                                <delete dir="gwt-unitCache" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clean-build-files</id>
                        <phase>clean</phase>
                        <configuration>
                            <tasks>
                                <delete dir="gwt-unitCache" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
        </plugins>
        <finalName>maplite</finalName>

        <!-- TODO: the resources stuff hardcodes paths to source + test directories, 
        we should be able to use some properties here -->
        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.txt</include>
                    <include>**/*.sql</include>
                    <include>**/*.html</include>
                    <include>**/*.xml</include>
                    <include>**/*.utf</include>
                    <include>**/*.properties</include>
                    <include>**/*.serialized</include>
                    <include>**/*.xsd</include>
                    <include>META-INF/*.jai</include>
                    <include>META-INF/mailcap</include>
                    <include>META-INF/services/**</include>
                    <include>applicationContext.xml</include>
                    <include>**/*.ftl</include>
                    <include>**/*.css</include>
                    <include>**/*.js</include>
                    <include>**/*.png</include>
                    <include>**/*.gif</include>
                    <include>**/*.sld</include>
                    <include>**/*.ico</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>

    </build>
            

</project>
